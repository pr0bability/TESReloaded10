//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/HDR005.pso /Fcshaderdump19/HDR005.pso.dis
//
//
// Parameters:
//
float4 HDRParam : register(c1);
float4 TESR_ToneMapping : register(c19);

sampler2D ScreenSpace : register(s0);
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   HDRParam     const_1       1
//   ScreenSpace         texture_0       1
//

#include "Includes/Color.hlsl"

// Structures:

struct VS_OUTPUT {
    float2 ScreenOffset : TEXCOORD0;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    float3 color;
	float3 result;

    color = tex2D(ScreenSpace, IN.ScreenOffset.xy).rgb;
	
	color = pow(abs(color), TESR_ToneMapping.w);
    result = GetRGBfromXYZ(max(GetXYZfromRGB(color) - HDRParam.x, 0) * HDRParam.y);
	result = pow(abs(result), 1.0 / TESR_ToneMapping.w);
	
    OUT.color_0.a = 1;
    OUT.color_0.rgb = result;

    return OUT;
};

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
